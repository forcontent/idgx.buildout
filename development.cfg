[buildout]
newest = false

extends =
    buildout.d/base.cfg
    buildout.d/sources.cfg
    buildout.d/gulp.cfg
    buildout.d/versions.cfg
    checkouts.cfg

parts +=
    checkversions
    mrbob
    omelette
    i18ndude
    flake8
    robot
    test
    test-dependencies
    versions-dump
    zodbupdate

package-extras = [test]

eggs +=
    ${buildout:custom-eggs}
    ${buildout:devtool-eggs}

test-eggs =
zcml +=


#show-picked-versions = true
#allow-picked-versions = false
extensions += mr.developer

[instance]
port-base = 0
debug-mode = on
verbose-security = on
zope-conf-additional +=
    http-realm Desenv
environment-vars =
    CHAMELEON_CACHE ${buildout:directory}/var/chameleon-cache
    CHAMELEON_DEBUG false
    CHAMELEON_RELOAD true
    CHAMELEON_EAGER true
    PYTHON_EGG_CACHE ${buildout:directory}/var/.python-eggs
    PTS_LANGUAGES en, es, pt-br
    zope_i18n_allowed_languages en, es, pt_BR
    zope_i18n_compile_mo_files true 
    TEMP ${buildout:directory}/var/tmp
    TMP ${buildout:directory}/var/tmp
    TZ America/Sao_Paulo

[checkversions]
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]

[mrbob]
recipe = zc.recipe.egg
eggs =
    mr.bob
    bobtemplates.plone

[omelette]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}

[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude

[flake8]
recipe = zc.recipe.egg
eggs = flake8

[robot]
recipe = zc.recipe.egg
eggs =
    ${buildout:test-eggs}
    Pillow
    plone.app.robotframework[reload,debug]

[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs =
#    ${buildout:package-name} ${buildout:package-extras}
    ${buildout:test-eggs}

[test-dependencies]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs =
    collective.cover [test]
    collective.nitf [test]
    sc.social.like [test]

[versions-dump]
# keep versions.cfg file for closed production environments updated
recipe = plone.recipe.command
file = ${buildout:directory}/etc/versions.cfg
command =
    echo "# THIS FILE IS GENERATED AUTOMATICALLY\n[versions]" > ${:file}
    bin/buildout annotate versions | tail -n +6 | grep "= " | sed 's/= / = /' | sort >> ${:file}
update-command = ${:command}

[zodbupdate]
recipe = zc.recipe.egg
eggs =
    zodbupdate
    ${instance:eggs}
